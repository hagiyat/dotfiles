[[plugins]]
repo = 'Shougo/context_filetype.vim'
on_event = 'BufRead'

[[plugins]]
repo = 'osyo-manga/vim-precious'
depends = ['context_filetype.vim']
hook_add = '''
" http://d.hatena.ne.jp/osyo-manga/20130612/1371046408
let g:precious_enable_switch_CursorMoved = {
      \ "*" : 0,
      \ "toml" : 1
      \ }
let g:precious_enable_switch_CursorMoved_i = {
      \ "*" : 0,
      \ "toml" : 1
      \ }
" insert に入った時にスイッチし、抜けた時に元に戻す
augroup switch_precious
  autocmd!
  autocmd InsertEnter * :PreciousSwitch
  autocmd InsertLeave * :PreciousReset
augroup END
'''

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'Shougo/neosnippet'
on_event = 'InsertEnter'
on_ft = ['snippet']
depends = ['neosnippet-snippets']
hook_source = '''
imap <C-k> <Plug>(neosnippet_expand_or_jump)
smap <C-k> <Plug>(neosnippet_expand_or_jump)
xmap <C-k> <Plug>(neosnippet_expand_target)
if has('conceal')
  set conceallevel=2 concealcursor=niv
endif
'''

[[plugins]]
repo = 'previm/previm'
on_ft = ['markdown']
on_cmd = 'PrevimOpen'
hook_source = '''
let g:previm_open_cmd = 'xdg-open -a $BROWSER'
'''

[[plugins]]
repo     = 'delphinus/vim-emacscommandline'
on_event = ['CmdlineEnter']

[[plugins]]
repo = 'rgroli/other.nvim'
on_cmd = ['Other', 'OtherSplit', 'OtherVSplit']
hook_add = '''
lua << EOF
vim.api.nvim_set_keymap("n", "<space>ll", "<cmd>:Other<CR>", { noremap = true, silent = true })
vim.api.nvim_set_keymap("n", "<space>lp", "<cmd>:OtherSplit<CR>", { noremap = true, silent = true })
vim.api.nvim_set_keymap("n", "<space>lv", "<cmd>:OtherVSplit<CR>", { noremap = true, silent = true })
vim.api.nvim_set_keymap("n", "<space>lc", "<cmd>:OtherClear<CR>", { noremap = true, silent = true })
EOF
'''
