[[plugins]]
repo = 'Shougo/neomru.vim'
on_path = '.*'
hook_add = '''
let g:neomru#file_mru_limit = 10000
'''

[[plugins]]
repo = 'Shougo/denite.nvim'
depends = ['neomru.vim']
on_cmd = 'Denite'
hook_post_source = '''
call denite#custom#var('file_rec', 'command',
      \ ['rg', '--files', '--glob', '!.git'])
call denite#custom#alias('source', 'file_rec/git', 'file_rec')
call denite#custom#var('file_rec/git', 'command',
      \ ['git', 'ls-files', '-co', '--exclude-standard'])

call denite#custom#var('grep', 'command', ['rg'])
call denite#custom#var('grep', 'recursive_opts', [])
call denite#custom#var('grep', 'final_opts', [])
call denite#custom#var('grep', 'separator', ['--'])
call denite#custom#var('grep', 'default_opts',
      \ ['--vimgrep', '--no-heading'])
call denite#custom#map('insert', '<C-g>', '<denite:enter_mode:normal>', 'noremap')
call denite#custom#map('insert', '<C-n>', '<denite:move_to_next_line>')
call denite#custom#map('insert', '<C-p>', '<denite:move_to_previous_line>')
'''
hook_add = '''
nnoremap [denite] <Nop>
nmap <Space> [denite]
nnoremap [denite]bb :<C-u>Denite buffer<CR>
nnoremap [denite]bo :<C-u>Denite outline<CR>
nnoremap [denite]bl :<C-u>Denite line<CR>
nnoremap [denite]ff :<C-u>Denite buffer file_mru<CR>
nnoremap [denite]ft :<C-u>Denite filetype<CR>
" nnoremap [denite]fr :<C-u>Denite file_rec<CR>
" nnoremap [denite]fr :<C-u>Denite \ `finddir('.git', ';') != '' ? 'file_rec/git' : 'file_rec'`<CR>
nnoremap [denite]fr :<C-u>Denite file_rec<CR>
nnoremap [denite]fg :<C-u>Denite file_rec/git<CR>
nnoremap [denite]gg :<C-u>Denite grep<CR>
nnoremap [denite]gc :<C-u>DeniteCursorWord grep<CR>
nnoremap [denite]dr :<C-u>Denite-resume<CR>
nnoremap [denite]dc :<C-u>Denite command<CR>
nnoremap [denite]dh :<C-u>Denite help<CR>
'''

[[plugins]]
repo = 'Shougo/deoplete.nvim'
hook_source = '''
  let g:deoplete#enable_at_startup = 1
  let g:deoplete#sources = {}
  let g:deoplete#sources._ = ['buffer', 'tag']
  let g:deoplete#tag#cache_limit_size = 10000000
  inoremap <expr><tab> pumvisible() ? "\<C-n>" :
        \ neosnippet#expandable_or_jumpable() ?
        \    "\<Plug>(neosnippet_expand_or_jump)" : "\<tab>"
'''
on_i = 1

[[plugins]]
repo = 'Shougo/neosnippet'
hook_source = '''
  imap <C-k> <Plug>(neosnippet_expand_or_jump)
  smap <C-k> <Plug>(neosnippet_expand_or_jump)
  xmap <C-k> <Plug>(neosnippet_expand_target)
  if has('conceal')
    set conceallevel=2 concealcursor=niv
  endif
'''
on_i  = 1
on_ft = ['snippet']
depends = ['neosnippet-snippets']

[[plugins]]
repo = 'osyo-manga/vim-monster'
on_ft = ['ruby', 'haml']
hook_source = '''
let g:monster#completion#rcodetools#backend = "async_rct_complete"
let g:deoplete#sources#omni#input_patterns = {
\   "ruby" : '[^. *\t]\.\w*\|\h\w*::',
\}
'''

[[plugins]]
repo = 'tpope/vim-rails'
on_ft = ['ruby', 'haml']
hook_source = '''
nnoremap <silent> <Space>ra :<C-u>A<CR>
nnoremap <silent> <Space>rr :<C-u>R<CR>
'''

[[plugins]]
repo = '5t111111/denite-rails'
on_ft = ['ruby', 'haml']
hook_source = '''
nnoremap [rails] <Nop>
nmap     <Space>r [rails]
" nnoremap <silent> [rails]r :<C-u>Denite<Space>rails:dwim<CR>
nnoremap <silent> [rails]m :<C-u>Denite<Space>rails:model<CR>
nnoremap <silent> [rails]c :<C-u>Denite<Space>rails:controller<CR>
nnoremap <silent> [rails]v :<C-u>Denite<Space>rails:view<CR>
nnoremap <silent> [rails]h :<C-u>Denite<Space>rails:helper<CR>
" nnoremap <silent> [rails]s :<C-u>Denite<Space>rails:test<CR>
'''

[[plugins]]
repo = 'kannokanno/previm'
on_ft = ['markdown']
hook_source = '''
let g:previm_open_cmd = $BROWSER
nnoremap <silent> <Space>mp :<C-u>PrevimOpen<CR>
'''

[[plugins]]
repo = 'godlygeek/tabular'
on_ft = ['markdown']
hook_source = '''
'''

[[plugins]]
repo = 'plasticboy/vim-markdown'
on_ft = ['markdown']
depends = ['tabular']
hook_source = '''
let g:vim_markdown_folding_disabled = 1
let g:vim_markdown_conceal = 2
let g:vim_markdown_no_extensions_in_markdown = 1
nnoremap <silent> <Space>mt :<C-u>TableFormat<CR>
nnoremap <silent> <Space>mh :<C-u>Toch<CR>
'''
