[[plugins]]
repo = 'junegunn/fzf.vim'
hook_add = '''
let g:fzf_command_prefix = 'Fzf'
let g:fzf_files_source = '(if [ -d .git ];then git ls-files; else fd; fi)'
nmap <Space>f [fzf]
nnoremap [fzf]b :FzfBuffers<CR>
nnoremap [fzf]x :FzfCommands<CR>
nnoremap [fzf]F :FzfFiles<CR>
nnoremap [fzf]f :call fzf#vim#files('', {'source': fzf_files_source})<CR>
nnoremap [fzf]h :FzfHistory<CR>
nnoremap [fzf]l :FzfLines<CR>
nnoremap [fzf]g :FzfRg
'''

[[plugins]]
repo = 'Shougo/deoplete.nvim'
hook_source = '''
  let g:deoplete#enable_at_startup = 1
  let g:deoplete#sources = {}
  let g:deoplete#sources._ = ['buffer', 'tag']
  let g:deoplete#tag#cache_limit_size = 10000000
  inoremap <expr><tab> pumvisible() ? "\<C-n>" :
        \ neosnippet#expandable_or_jumpable() ?
        \    "\<Plug>(neosnippet_expand_or_jump)" : "\<tab>"
  call deoplete#custom#source('LanguageClient',
        \ 'min_pattern_length',
        \ 2)
'''
on_i = 1

[[plugins]]
repo = 'Shougo/neosnippet'
hook_source = '''
  imap <C-k> <Plug>(neosnippet_expand_or_jump)
  smap <C-k> <Plug>(neosnippet_expand_or_jump)
  xmap <C-k> <Plug>(neosnippet_expand_target)
  if has('conceal')
    set conceallevel=2 concealcursor=niv
  endif
'''
on_i  = 1
on_ft = ['snippet']
depends = ['neosnippet-snippets']


[[plugins]]
repo = 'previm/previm'
on_ft = ['markdown']
hook_source = '''
let g:previm_open_cmd = $BROWSER
nnoremap <silent> <Space>mp :<C-u>PrevimOpen<CR>
'''

[[plugins]]
repo = 'godlygeek/tabular'
on_ft = ['markdown']
hook_source = '''
'''

[[plugins]]
repo = 'plasticboy/vim-markdown'
on_ft = ['markdown']
depends = ['tabular']
hook_source = '''
let g:vim_markdown_folding_disabled = 1
let g:vim_markdown_conceal = 2
let g:vim_markdown_no_extensions_in_markdown = 1
nnoremap <silent> <Space>mt :<C-u>TableFormat<CR>
nnoremap <silent> <Space>mh :<C-u>Toch<CR>
'''
