[[plugins]]
repo = 'Shougo/neomru.vim'
on_path = '.*'
hook_add = '''
let g:neomru#file_mru_limit = 100
'''

[[plugins]]
repo = 'Shougo/denite.nvim'
depends = ['neomru.vim']
on_cmd = 'Denite'
hook_post_source = '''
call denite#custom#var('file/rec', 'command',
      \ ['fd', '--follow', '--hidden', '--exclude', '.git', '--type', 'f', ''])
call denite#custom#alias('source', 'file/rec/git', 'file/rec')
call denite#custom#var('file/rec/git', 'command',
      \ ['git', 'ls-files', '-co', '--exclude-standard'])

call denite#custom#var('grep', 'command', ['rg'])
call denite#custom#var('grep', 'default_opts',
      \ ['--vimgrep', '--no-heading'])
call denite#custom#var('grep', 'recursive_opts', [])
call denite#custom#var('grep', 'pattern_opt', ['--regexp'])
call denite#custom#var('grep', 'separator', ['--'])
call denite#custom#var('grep', 'final_opts', [])
call denite#custom#source('grep', 'args', ['', '', '!'])

call denite#custom#map('insert', '<C-g>', '<denite:enter_mode:normal>', 'noremap')
call denite#custom#map('insert', '<C-n>', '<denite:move_to_next_line>')
call denite#custom#map('insert', '<C-p>', '<denite:move_to_previous_line>')

" display configurations
let s:denite_win_width_percent = 0.8
let s:denite_win_height_percent = 0.4

call denite#custom#option('default', {
      \ 'split': 'horizontal',
      \ 'winheight': float2nr(&lines * s:denite_win_height_percent),
      \ 'highlight_filter_background': 'DeniteFilter',
      \ 'highlight_matched_char': 'None',
      \ 'highlight_matched_range': 'Search',
      \ 'match_highlight': v:true,
      \ 'prompt': '⫸ ',
      \ 'start_filter': v:true,
      \ 'floating_preview': v:true,
      \ 'preview_height': float2nr(&lines * s:denite_win_height_percent),
      \ 'preview_width': float2nr(&columns * s:denite_win_width_percent),
      \ 'auto_resize': v:true,
      \})

autocmd FileType denite set winblend=10
autocmd FileType denite-filter set winblend=10
'''
hook_add = '''
autocmd FileType denite call s:denite_my_settings()
function! s:denite_my_settings() abort
  nnoremap <silent><buffer><expr> i
        \ denite#do_map('open_filter_buffer')
  nnoremap <silent><buffer><expr> q
        \ denite#do_map('quit')
  nnoremap <silent><buffer><expr> <CR>
        \ denite#do_map('do_action')
  nnoremap <silent><buffer><expr> <tab>
        \ denite#do_map('quick_move')
  nnoremap <silent><buffer><expr> p
        \ denite#do_map('toggle_auto_action', 'preview')
  nnoremap <silent><buffer><expr> P
        \ denite#do_map('toggle_auto_action', 'preview_bat')
  nnoremap <silent><buffer><expr> H
        \ denite#do_map('toggle_auto_action', 'highlight')
endfunction

nnoremap [denite] <Nop>
nmap <Space>f [denite]
nnoremap [denite]b <Cmd>Denite buffer file_mru<CR>
nnoremap [denite]l <Cmd>Denite line -highlight-matched-char=None -highlight-matched-range=Search -match-highlight -auto-action=preview<CR><CR>
nnoremap [denite]t <Cmd>Denite filetype<CR>
nnoremap [denite]f <Cmd>DeniteProjectDir file/rec<CR>
nnoremap [denite]F <Cmd>Denite file/rec<CR>
nnoremap [denite]g <Cmd>DeniteProjectDir grep<CR>
nnoremap [denite]G <Cmd>DeniteCursorWord grep<CR>
nnoremap [denite]r <Cmd>Denite-resume<CR>
nnoremap [denite]c <Cmd>Denite command<CR>
nnoremap [denite]h <Cmd>Denite help<CR>
'''

[[plugins]]
repo = 'Shougo/context_filetype.vim'
on_event = 'BufRead'

[[plugins]]
repo = 'osyo-manga/vim-precious'
depends = ['context_filetype.vim']
hook_add = '''
" http://d.hatena.ne.jp/osyo-manga/20130612/1371046408
let g:precious_enable_switch_CursorMoved = {
      \ "*" : 0,
      \ "toml" : 1
      \ }
let g:precious_enable_switch_CursorMoved_i = {
      \ "*" : 0,
      \ "toml" : 1
      \ }
" insert に入った時にスイッチし、抜けた時に元に戻す
augroup switch_precious
  autocmd!
  autocmd InsertEnter * :PreciousSwitch
  autocmd InsertLeave * :PreciousReset
augroup END
'''

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'Shougo/neosnippet'
on_event = 'InsertEnter'
on_ft = ['snippet']
depends = ['neosnippet-snippets']
hook_source = '''
imap <C-k> <Plug>(neosnippet_expand_or_jump)
smap <C-k> <Plug>(neosnippet_expand_or_jump)
xmap <C-k> <Plug>(neosnippet_expand_target)
if has('conceal')
  set conceallevel=2 concealcursor=niv
endif
'''

[[plugins]]
repo = 'previm/previm'
on_ft = ['markdown']
on_cmd = 'PrevimOpen'
hook_source = '''
let g:previm_open_cmd = 'xdg-open -a $BROWSER'
'''

[[plugins]]
repo     = 'delphinus/vim-emacscommandline'
on_event = ['CmdlineEnter']
