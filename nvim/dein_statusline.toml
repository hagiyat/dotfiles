[[plugins]]
repo = 'itchyny/lightline.vim'
depends = ['coc.nvim', 'gina.vim']
hook_add = '''
let g:lightline = {
  \ 'colorscheme': 'jellybeans',
  \ 'mode_map': {'c': 'NORMAL'},
  \ 'active': {
  \   'left': [
  \     [ 'mode', 'paste' ],
  \     [ 'gitbranch' ],
  \     [ 'filename', 'cocstatus' ],
  \   ],
  \   'right': [
  \     [ 'lineinfo' ],
  \     [ 'fileformat', 'fileencoding', 'filetype' ]
  \   ],
  \ },
  \ 'component': {
  \   'lineinfo': '%3l:%-2v%<',
  \ },
  \ 'component_function': {
  \   'cocstatus': 'coc#status',
  \   'currentfunction': 'CocCurrentFunction',
  \   'statusdiagnostic': 'StatusDiagnostic',
  \   'readonly': 'LightLineReadonly',
  \   'gitbranch': 'LightlineGitBranch',
  \   'filename': 'LightLineFilename'
  \ },
  \ 'separator': { 'left': "\ue0b8", 'right': "\ue0ba" },
  \ 'subseparator': { 'left': "\ue0b9", 'right': "\ue0bb" },
  \}

  " slash-// (required: nerd fonts)
  " \ 'separator': { 'left': "\ue0bc", 'right': "\ue0ba" },
  " \ 'subseparator': { 'left': "\ue0bd", 'right': "\ue0bb" },
  " slash-\\
  " \ 'separator': { 'left': "\ue0b8", 'right': "\ue0be" },
  " \ 'subseparator': { 'left': "\ue0b9", 'right': "\ue0bf" },
  " slash-\/
  " \ 'separator': { 'left': "\ue0b8", 'right': "\ue0ba" },
  " \ 'subseparator': { 'left': "\ue0b9", 'right': "\ue0bb" },
  " slash-/\
  " \ 'separator': { 'left': "\ue0bc", 'right': "\ue0be" },
  " \ 'subseparator': { 'left': "\ue0bd", 'right': "\ue0bf" },
  " arrow
  " \ 'separator': { 'left': "\ue0b0", 'right': "\ue0b2" },
  " \ 'subseparator': { 'left': "\ue0b1", 'right': "\ue0b3" },

function! LightlineReadonly()
  return &readonly ? '' : ''
endfunction

function! LightLineFilename()
  return ('' != LightlineReadonly() ? LightlineReadonly() . ' ' : '') .
        \ (&ft == 'denite' ? denite#get_status("sources") :
        \ '' != expand('%') && winwidth(0) <=120 ? expand('%:f') : winwidth(0) >120 ? expand('%:p') : '[No Name]') .
        \ (&modified ? ' ◈' : '')
endfunction

function! LightlineGitBranch()
  return '' != gina#component#repo#branch() ? "\ue0a0". gina#component#repo#branch() : ''
endfunction

function! CocCurrentFunction()
    return get(b:, 'coc_current_function', '')
endfunction
'''
