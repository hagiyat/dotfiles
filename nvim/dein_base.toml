[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'haya14busa/dein-command.vim'

[[plugins]]
repo = 'Shougo/vimproc'
build = 'make'

[[plugins]]
repo = 'Shougo/deol.nvim'
hook_add = '''
let g:deol#shell_history_path = '~/.zsh_history'

nmap <silent><Space>t [deol]
nnoremap  [deol]t :Deol -split=horizontal -winheight=30<CR>
nnoremap  [deol]f :Deol -split=floating -winheight=30<CR>
nnoremap  [deol]l :Deol -split=farleft<CR>
nnoremap  [deol]r :Deol -split=farright<CR>

" terminal„Çínormal mode„Å´
tnoremap <C-g> <C-\><C-n>
tnoremap <ESC> <C-\><C-n>

" transparent
autocmd FileType deol set winblend=10
'''

[[plugins]]
repo = 'kana/vim-submode'

[[plugins]]
repo = 'lambdalisue/gina.vim'

[[plugins]]
repo = 'airblade/vim-gitgutter'
hook_source = '''
let g:gitgutter_sign_added = '‚éÜ'
let g:gitgutter_sign_modified = '‚åÅ'
let g:gitgutter_sign_removed = '‚àÖ'
let g:gitgutter_sign_removed_first_line = '‚éã'
let g:gitgutter_sign_modified_removed = '‚éå'
'''
hook_add = '''
nmap <Space>g [gitgutter]
nmap [gitgutter]j <Plug>GitGutterNextHunk
nmap [gitgutter]k <Plug>GitGutterPrevHunk
'''

[[plugins]]
repo = 'thinca/vim-quickrun'

[[plugins]]
repo = 'thinca/vim-visualstar'

[[plugins]]
repo = 'easymotion/vim-easymotion'
hook_add = '''
let g:EasyMotion_do_mapping = 0

nnoremap s <Nop>
map gsh <Plug>(easymotion-linebackward)
map gsj <Plug>(easymotion-j)
map gsk <Plug>(easymotion-k)
map gsl <Plug>(easymotion-lineforward)

" s{char}{char} to move to {char}{char}
nmap gss <Plug>(easymotion-overwin-f2)
vmap gss <Plug>(easymotion-bd-f2)
'''

[[plugins]]
repo = 'haya14busa/incsearch.vim'

[[plugins]]
repo = 'haya14busa/incsearch-easymotion.vim'
depends = ['incsearch.vim', 'vim-easymotion']
hook_add = '''
function! s:incsearch_config(...) abort
  return incsearch#util#deepextend(deepcopy({
  \   'modules': [incsearch#config#easymotion#module({'overwin': 1})],
  \   'keymap': {
  \     "\<C-l>": '<Over>(easymotion)'
  \   },
  \   'is_expr': 0
  \ }), get(a:, 1, {}))
endfunction

noremap <silent><expr> /  incsearch#go(<SID>incsearch_config())
noremap <silent><expr> ?  incsearch#go(<SID>incsearch_config({'command': '?'}))
noremap <silent><expr> g/ incsearch#go(<SID>incsearch_config({'is_stay': 1}))
'''

[[plugins]]
repo = 'szw/vim-maximizer'
hook_add = '''
let g:maximizer_set_mapping_with_bang = 0
nnoremap <silent> <Space>ww :<C-u>MaximizerToggle<CR>
'''

[[plugins]]
repo = 'cohama/lexima.vim'

[[plugins]]
repo = 'mhinz/vim-startify'
depends = 'neoterm'
hook_add = '''
function! s:filter_header(lines) abort
  let longest_line   = max(map(copy(a:lines), 'len(v:val)'))
  " let centered_lines = map(copy(a:lines),
        " \ 'repeat(" ", (&columns / 2) - (longest_line / 2)) . v:val')
  let centered_lines = map(copy(a:lines), 'repeat(" ", 4) . v:val')
  return centered_lines
endfunction
function! UpdateTags()
  ! exec zsh rtags
endfunction

let g:startify_custom_header = s:filter_header([
 \ '                     _     ',
 \ '  ___  ___ ___ _  __(_)_ _ ',
 \ ' / _ \/ -_) _ \ |/ / /  ` \',
 \ '/_//_/\__/\___/___/_/_/_/_/',
 \])
let g:startify_files_number = 5
let g:startify_custom_indices = split("w r t y u o p a s d f g v b n")
let g:startify_bookmarks = [
  \ '~/repos/dotfiles',
  \ '~/repos',
  \ '~/Dropbox/notes',
\ ]
let g:startify_commands = [
  \ ['open file_rec', ":Denite `finddir('.git', ';') != '' ? 'file_rec/git' : 'file_rec'`"],
  \ ['update ctags', ':GutentagsUpdate'],
  \ ]

let g:startify_list_order = [
  \ [join(['   üóÇ  MRU', getcwd()], ' ')],
  \ 'dir',
  \ ['   üõ†  Commands'],
  \ 'commands',
  \ ['   üè∑  Bookmarks'],
  \ 'bookmarks',
  \]
'''

[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'
hook_add = '''
let g:indent_guides_auto_colors = 1
let g:indent_guides_color_change_percent = 5
nmap <silent> <Space>gt <Plug>IndentGuidesToggle
'''
